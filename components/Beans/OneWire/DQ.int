<?xml version="1.0" encoding="UTF-8"?>
<Interface>
  <Name>DQ</Name>
  <Description>Interface DQ for BitIO_LDD generated by Inheritance Wizard</Description>
  <Author />
  <Version>01.000</Version>
  <FileVersion>1</FileVersion>
  <MethodList>
    <Method>
      <TMthdItem>
        <Name>SetDir</Name>
        <Symbol>SetDir</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Sets a pin direction (available only if the direction = &lt;u&gt;&lt;tt&gt;input/output&lt;/tt&gt;&lt;/u&gt;).</Hint>
        <ItemLevel>ADVANCED</ItemLevel>
        <EditLine>false</EditLine>
        <UI_DisplayIn>TABLE_AND_GRAPHICAL_VIEW</UI_DisplayIn>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>1</DefaultIndex>
        <TextValueIndex>true</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>false</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>false</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>void</ReturnType>
        <RetHint />
        <ParamCount>2</ParamCount>
        <Parameter>
          <ParName>DeviceDataPtr</ParName>
          <ParType>LDD_TDeviceData</ParType>
          <ParPassing>Address</ParPassing>
          <ParHint>Device data structure pointer returned by &lt;a href="#Init"&gt;Init&lt;/a&gt; method.</ParHint>
        </Parameter>
        <Parameter>
          <ParName>Dir</ParName>
          <ParType>Boolean</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Direction to set. Possible values:&lt;br /&gt;     &lt;a href="..\..\DOCs\BeanCodeTypicalUsage.html#Bool"&gt;false&lt;/a&gt; - Input&lt;br /&gt;     &lt;a href="..\..\DOCs\BeanCodeTypicalUsage.html#Bool"&gt;true&lt;/a&gt; - Output</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #M#_#C#(LDD_TDeviceData *DeviceDataPtr, bool Dir)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>SetOutput</Name>
        <Symbol>SetOutput</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Sets a pin direction to output (available only if the direction = &lt;u&gt;&lt;tt&gt;input/output&lt;/tt&gt;&lt;/u&gt;).</Hint>
        <ItemLevel>ADVANCED</ItemLevel>
        <EditLine>false</EditLine>
        <UI_DisplayIn>TABLE_AND_GRAPHICAL_VIEW</UI_DisplayIn>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>1</DefaultIndex>
        <TextValueIndex>true</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>false</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>false</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>void</ReturnType>
        <RetHint />
        <ParamCount>1</ParamCount>
        <Parameter>
          <ParName>DeviceDataPtr</ParName>
          <ParType>LDD_TDeviceData</ParType>
          <ParPassing>Address</ParPassing>
          <ParHint>Device data structure pointer returned by &lt;a href="#Init"&gt;Init&lt;/a&gt; method.</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #M#_#C#(LDD_TDeviceData *DeviceDataPtr)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
  </MethodList>
  <Registration>
    <Template>BitIO_LDD</Template>
  </Registration>
  <UserTypes>
    <Type>
      <UsrType>TUserType</UsrType>
      <Name>LDD_TUserData</Name>
      <Hint>Pointer to this type specifying the user or RTOS specific data will be passed as an event or callback parameter.</Hint>
      <Generate>no</Generate>
      <Unique>no</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint>/* Pointer to this type specifying the user or RTOS specific data will be passed as an event or callback parameter. */\n</PreparedHint>
      <Type />
    </Type>
    <Type>
      <UsrType>TUserType</UsrType>
      <Name>LDD_TDeviceData</Name>
      <Hint>Pointer to this type, specifying the private component state information and data, has to be passed as a parameter to every component's method.</Hint>
      <Generate>no</Generate>
      <Unique>no</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint>/* Pointer to this type, specifying the private component state information and data, has to be passed as a parameter to every component's method. */\n</PreparedHint>
      <Type />
    </Type>
    <Type>
      <UsrType>TUserType</UsrType>
      <Name>LDD_TDeviceData*</Name>
      <Hint>Init method of the component creates the private state structure and returns the pointer to it. This pointer needs to be passed to every component method.</Hint>
      <Generate>no</Generate>
      <Unique>no</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint>/* Init method of the component creates the private state structure and returns the pointer to it. This pointer needs to be passed to every component method. */\n</PreparedHint>
      <Type />
    </Type>
    <Type>
      <UsrType>TUserType</UsrType>
      <Name>LDD_TError</Name>
      <Hint>Error identifier type</Hint>
      <Generate>no</Generate>
      <Unique>no</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint>/* Error identifier type */\n</PreparedHint>
      <Type />
    </Type>
  </UserTypes>
</Interface>

