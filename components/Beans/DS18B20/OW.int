<?xml version="1.0" encoding="UTF-8"?>
<Interface>
  <Name>OW</Name>
  <Description>Interface OW for OneWire generated by Inheritance Wizard</Description>
  <Author />
  <Version>01.000</Version>
  <FileVersion>1</FileVersion>
  <MethodList>
    <Method>
      <TMthdItem>
        <Name>SendReset</Name>
        <Symbol>SendReset</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint />
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <UI_DisplayIn>TABLE_AND_GRAPHICAL_VIEW</UI_DisplayIn>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>true</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>void</ReturnType>
        <RetHint />
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>Receive</Name>
        <Symbol>Receive</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Programs a read operation after the master send all in output buffer. Don't use a SendReset while the data is coming.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <ReadOnly>true</ReadOnly>
        <EditLine>false</EditLine>
        <UI_DisplayIn>TABLE_AND_GRAPHICAL_VIEW</UI_DisplayIn>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>true</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>false</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>bool</ReturnType>
        <RetHint>Returns FALSE if the program buffer is full or if count is greater than the free space of input buffer-</RetHint>
        <ParamCount>2</ParamCount>
        <Parameter>
          <ParName>numOfBytes</ParName>
          <ParType>uint8_t</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint />
        </Parameter>
        <Parameter>
          <ParName>count</ParName>
          <ParType>uint8_t</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Number of bytes to receive from slave.</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>Count</Name>
        <Symbol>Count</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Returns the number of elements stored on input buffer that are ready to read.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <UI_DisplayIn>TABLE_AND_GRAPHICAL_VIEW</UI_DisplayIn>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>true</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>uint8_t</ReturnType>
        <RetHint />
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>ProgramEvent</Name>
        <Symbol>ProgramEvent</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint />
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <UI_DisplayIn>TABLE_AND_GRAPHICAL_VIEW</UI_DisplayIn>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>true</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>bool</ReturnType>
        <RetHint>Returns false if the program buffer is full.</RetHint>
        <ParamCount>1</ParamCount>
        <Parameter>
          <ParName>key</ParName>
          <ParType>uint16_t</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Key to identificate the event, applies only if OProgramEvent is enabled. (Valid range 0 - 31)</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>Waitms</Name>
        <Symbol>Waitms</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Programs a pause between instruccions.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <UI_DisplayIn>TABLE_AND_GRAPHICAL_VIEW</UI_DisplayIn>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>true</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>bool</ReturnType>
        <RetHint>Returns false if the program buffer or the time buffer is full.</RetHint>
        <ParamCount>3</ParamCount>
        <Parameter>
          <ParName>key</ParName>
          <ParType>uint8_t</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Key to identificate the source of the event.</ParHint>
        </Parameter>
        <Parameter>
          <ParName>key</ParName>
          <ParType>uint8_t</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Key to identificate the period end, applies only if OnWaitEnd evet is enabled.  (Valid range 0 - 31)</ParHint>
        </Parameter>
        <Parameter>
          <ParName>time_ms</ParName>
          <ParType>uint16_t</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Value of time to wait.</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>SendByte</Name>
        <Symbol>SendByte</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint />
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <UI_DisplayIn>TABLE_AND_GRAPHICAL_VIEW</UI_DisplayIn>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>true</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>bool</ReturnType>
        <RetHint />
        <ParamCount>1</ParamCount>
        <Parameter>
          <ParName>_byte</ParName>
          <ParType>uint8_t</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Variable to save the byte.</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>SendBytes</Name>
        <Symbol>SendBytes</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint />
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <UI_DisplayIn>TABLE_AND_GRAPHICAL_VIEW</UI_DisplayIn>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>true</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>bool</ReturnType>
        <RetHint />
        <ParamCount>2</ParamCount>
        <Parameter>
          <ParName>_bytes</ParName>
          <ParType>uint8_t</ParType>
          <ParPassing>Address</ParPassing>
          <ParHint>Array of bytes to add to output stream.</ParHint>
        </Parameter>
        <Parameter>
          <ParName>count</ParName>
          <ParType>uint8_t</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Number of bytes to add to output stream. (Valid range 0 - 31)</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>GetBytes</Name>
        <Symbol>GetBytes</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint />
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <UI_DisplayIn>TABLE_AND_GRAPHICAL_VIEW</UI_DisplayIn>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>true</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>bool</ReturnType>
        <RetHint />
        <ParamCount>2</ParamCount>
        <Parameter>
          <ParName>_bytes</ParName>
          <ParType>uint8_t</ParType>
          <ParPassing>Address</ParPassing>
          <ParHint />
        </Parameter>
        <Parameter>
          <ParName>count</ParName>
          <ParType>uint8_t</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint />
        </Parameter>
        <Scope>PRIVATE</Scope>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>GetByte</Name>
        <Symbol>GetByte</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint />
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <UI_DisplayIn>TABLE_AND_GRAPHICAL_VIEW</UI_DisplayIn>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>true</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>bool</ReturnType>
        <RetHint />
        <ParamCount>1</ParamCount>
        <Parameter>
          <ParName>_byte</ParName>
          <ParType>uint8_t</ParType>
          <ParPassing>Address</ParPassing>
          <ParHint />
        </Parameter>
        <Scope>PRIVATE</Scope>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>GetError</Name>
        <Symbol>GetError</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint />
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <UI_DisplayIn>TABLE_AND_GRAPHICAL_VIEW</UI_DisplayIn>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>true</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>void</ReturnType>
        <RetHint />
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
      </TMthdItem>
    </Method>
  </MethodList>
  <EventList>
    <Event>
      <TEvntItem>
        <Name>OnProgramEvent</Name>
        <Symbol>OnProgramEvent</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint />
        <ItemLevel>BASIC</ItemLevel>
        <BoldName>true</BoldName>
        <EditLine>false</EditLine>
        <UI_DisplayIn>TABLE_AND_GRAPHICAL_VIEW</UI_DisplayIn>
        <Description>generate code</Description>
        <Expanded>Yes</Expanded>
        <DefaultValue>true</DefaultValue>
        <DefineSymbol>YES_NO</DefineSymbol>
        <IfDisabled>setNOTHING</IfDisabled>
        <IsAssembler>false</IsAssembler>
        <Mode>meiAlwReq_!Exist</Mode>
        <ParamCount>1</ParamCount>
        <Parameter>
          <ParName>key</ParName>
          <ParType>int8_t</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Key to identificate the source of the event.</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #C#(void)</ANSIC>
        </Declarations>
      </TEvntItem>
    </Event>
    <Event>
      <TEvntItem>
        <Name>OnError</Name>
        <Symbol>OnError</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint />
        <ItemLevel>BASIC</ItemLevel>
        <BoldName>true</BoldName>
        <EditLine>false</EditLine>
        <UI_DisplayIn>TABLE_AND_GRAPHICAL_VIEW</UI_DisplayIn>
        <Description>generate code</Description>
        <Expanded>Yes</Expanded>
        <DefaultValue>true</DefaultValue>
        <DefineSymbol>YES_NO</DefineSymbol>
        <IfDisabled>setNOTHING</IfDisabled>
        <IsAssembler>false</IsAssembler>
        <Mode>meiAlwReq_!Exist</Mode>
        <ParamCount>1</ParamCount>
        <Parameter>
          <ParName>error</ParName>
          <ParType>Error</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint />
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #C#(void)</ANSIC>
        </Declarations>
      </TEvntItem>
    </Event>
  </EventList>
  <Registration>
    <Template>OneWire</Template>
  </Registration>
  <UserTypes>
    <Type>
      <UsrType>TEnumType</UsrType>
      <Name>Error</Name>
      <Hint>Error Type</Hint>
      <Generate>yes</Generate>
      <Unique>yes</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint />
      <EnumCount>2</EnumCount>
      <Enum>NO_DEVICE</Enum>
      <Enum>NO_RESPONSE</Enum>
    </Type>
  </UserTypes>
</Interface>

